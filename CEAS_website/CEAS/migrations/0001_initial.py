# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2016-11-17 08:57
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='title', max_length=128, null=True)),
                ('primary_faculty_member', models.CharField(default='faculty name', max_length=128, null=True)),
                ('primary_faculty_phone_number', models.CharField(blank=True, default='+1999-999-9999', max_length=128, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?[\\d|-]{9,15}$')])),
                ('primary_faculty_email', models.EmailField(default='Name@email.com', max_length=254, null=True)),
                ('primary_faculty_department', models.CharField(blank=True, choices=[('ASP', 'Aerospace Engineering'), ('AM', 'Applied Mathematics'), ('AE', 'Architectural Engineering'), ('CE', 'Chemical Engineering'), ('CBE', 'Chemical and Biological Engineering'), ('CVE', 'Civil Engineering'), ('CS', 'Computer Science'), ('EE', 'Electrical Engineering'), ('ECE', 'Electrical and Computer Engineering'), ('EP', 'Engineering Physics'), ('ENVE', 'Environmental Engineering'), ('EPL', 'Engineering Plus'), ('ME', 'Mechanical Engineering')], default='CS', max_length=10, null=True)),
                ('secondary_faculty_member', models.CharField(blank=True, default='faculty name', max_length=128, null=True)),
                ('secondary_faculty_phone_number', models.CharField(blank=True, default='+1999-999-9999', max_length=128, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?[\\d|-]{9,15}$')])),
                ('secondary_faculty_email', models.EmailField(blank=True, default='Name@email.com', max_length=128, null=True)),
                ('secondary_faculty_department', models.CharField(blank=True, choices=[('ASP', 'Aerospace Engineering'), ('AM', 'Applied Mathematics'), ('AE', 'Architectural Engineering'), ('CE', 'Chemical Engineering'), ('CBE', 'Chemical and Biological Engineering'), ('CVE', 'Civil Engineering'), ('CS', 'Computer Science'), ('EE', 'Electrical Engineering'), ('ECE', 'Electrical and Computer Engineering'), ('EP', 'Engineering Physics'), ('ENVE', 'Environmental Engineering'), ('EPL', 'Engineering Plus'), ('ME', 'Mechanical Engineering')], default='CS', max_length=10, null=True)),
                ('grad_post_doc_info', models.CharField(blank=True, default='', max_length=128, null=True)),
                ('grad_post_doc_phone', models.CharField(blank=True, default='+1999-999-9999', max_length=128, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?[\\d|-]{9,15}$')])),
                ('grad_post_doc_email', models.EmailField(blank=True, default='Name@email.com', max_length=254, null=True)),
                ('from_what_areas_do_you_wish_to_recruit_student', multiselectfield.db.fields.MultiSelectField(choices=[('ASP', 'Aerospace Engineering'), ('AM', 'Applied Mathematics'), ('AE', 'Architectural Engineering'), ('CE', 'Chemical Engineering'), ('CBE', 'Chemical and Biological Engineering'), ('CVE', 'Civil Engineering'), ('CS', 'Computer Science'), ('EE', 'Electrical Engineering'), ('ECE', 'Electrical and Computer Engineering'), ('EP', 'Engineering Physics'), ('ENVE', 'Environmental Engineering'), ('EPL', 'Engineering Plus'), ('ME', 'Mechanical Engineering')], default='CS', max_length=10, null=True)),
                ('special_requirements', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('speed_type', models.IntegerField(blank=True, default=0, null=True)),
                ('EDC_focus', models.BooleanField(default=True)),
                ('number_of_applicants', models.IntegerField(default=1, null=True)),
                ('website', models.URLField(blank=True, default='http://www.colorado.edu/activelearningprogram/discovery-learning/discovery-learning-apprenticeship-program', max_length=128, null=True)),
                ('short_description', models.TextField(blank=True, default='', max_length=80, null=True)),
                ('description', models.TextField(blank=True, default='', max_length=1200, null=True)),
                ('supervision', models.CharField(blank=True, choices=[('low', 'Very little supervision; student will need to work largely independently'), ('moderate', 'Moderate amount of supervision and interaction with others'), ('good', 'Good deal of supervision; student will work as an integral part of a research team')], default='low', max_length=128, null=True)),
                ('supervision_provided', models.CharField(blank=True, choices=[('1', 'Supervision primarily by faculty supervisor'), ('2', 'Supervision primarily by graduate students'), ('3', 'Supervision primarily a combination of faculty and graduate students')], default='1', max_length=128, null=True)),
                ('nature_work', models.CharField(blank=True, choices=[('4', 'Nature of work is primarily theoretical, most work on paper/electronic medium'), ('5', 'Nature of work is primarily experimental, requiring hands-on work in a lab'), ('6', 'Nature of work is primarily field based, requiring hands-on work in the field'), ('7', 'Nature of work is primarily computer-related, involving coding/analysis'), ('8', 'Nature of work is a combination of several types of work.')], default='4', max_length=128, null=True)),
                ('previous_work', models.CharField(blank=True, choices=[('9', 'No prior work; student will be starting from basic idea'), ('10', 'Some prior work; student will build on work of others'), ('11', 'Well-established body of work; student will refine/improved upon efforts of others')], default='9', max_length=128, null=True)),
                ('pref_student', models.CharField(blank=True, max_length=128, null=True)),
                ('others', models.TextField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_Name', models.CharField(max_length=128, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('I do not wish to provide this information', 'I do not wish to provide this information')], max_length=100, null=True)),
                ('race', models.CharField(blank=True, choices=[('ai', 'American Indian or Alaskan'), ('bl', 'Black or African American'), ('nh', 'Native Hawaiian or other Pacific Islander'), ('asi', 'Asian'), ('wh', 'White'), ('ot', 'Other'), ('I do not wish to provide this information', 'I do not wish to provide this information')], default='I do not wish to provide this information', max_length=100)),
                ('address', models.CharField(blank=True, max_length=2000)),
                ('phone_Number', models.CharField(blank=True, default='+1999-999-9999', max_length=128, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?[\\d|-]{9,15}$')])),
                ('email', models.EmailField(default='name@email.com', max_length=254)),
                ('primary_Major', models.CharField(choices=[('asp', 'Aerospace Engineering'), ('am', 'Applied Mathematics'), ('ae', 'Architectural Engineering'), ('ce', 'Chemical Engineering'), ('cbe', 'Chemical and Biological Engineering'), ('cve', 'Civil Engineering'), ('cs', 'Computer Science'), ('ee', 'Electrical Engineering'), ('ece', 'Electrical and Computer Engineering'), ('ep', 'Engineering Physics'), ('enve', 'Environmental Engineering'), ('epl', 'Engineering Plus'), ('me', 'Mechanical Engineering'), ('tam', 'Technology, Arts, and Media')], default='Computer Science', max_length=100)),
                ('secondary_Major', models.CharField(blank=True, choices=[('asp', 'Aerospace Engineering'), ('am', 'Applied Mathematics'), ('ae', 'Architectural Engineering'), ('ce', 'Chemical Engineering'), ('cbe', 'Chemical and Biological Engineering'), ('cve', 'Civil Engineering'), ('cs', 'Computer Science'), ('ee', 'Electrical Engineering'), ('ece', 'Electrical and Computer Engineering'), ('ep', 'Engineering Physics'), ('enve', 'Environmental Engineering'), ('epl', 'Engineering Plus'), ('me', 'Mechanical Engineering'), ('tam', 'Technology, Arts, and Media')], max_length=100)),
                ('student_ID', models.CharField(default='000000000', max_length=9, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')])),
                ('GPA', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(4.0)])),
                ('grade_level_as_of_next_fall', models.CharField(blank=True, choices=[('fr', 'Freshman'), ('so', 'Sophomore'), ('jr', 'Junior'), ('sr', 'Senior'), ('ssr', 'Fifth Year Senior')], max_length=50)),
                ('anticipated_Graduation_Date', models.CharField(blank=True, default='May 2017', max_length=100)),
                ('prevres', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=100)),
                ('previously_Applied', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=10)),
                ('feplans', models.CharField(blank=True, max_length=500)),
                ('firstChoice', models.CharField(max_length=10)),
                ('secondChoice', models.CharField(max_length=10)),
                ('thirdChoice', models.CharField(max_length=10)),
                ('fourthChoice', models.CharField(max_length=10)),
                ('fifthChoice', models.CharField(max_length=10)),
                ('backcheck', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Do not know', 'Do not know')], default='Yes', max_length=10)),
                ('dhtraining', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Do not know', 'Do not know')], default='Yes', max_length=10)),
                ('social', models.CharField(default='0000', max_length=4, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')])),
                ('skill1', models.CharField(blank=True, max_length=75)),
                ('skill2', models.CharField(blank=True, max_length=75)),
                ('skill3', models.CharField(blank=True, max_length=75)),
                ('resume', models.FileField(blank=True, default='./resume', upload_to='')),
                ('cover_Letter', models.FileField(blank=True, default='./resume', upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=128, null=True)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='page',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CEAS.Status'),
        ),
    ]
